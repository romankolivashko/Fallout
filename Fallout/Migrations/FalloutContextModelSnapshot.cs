// <auto-generated />
using System;
using Fallout.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Fallout.Migrations
{
    [DbContext(typeof(FalloutContext))]
    partial class FalloutContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Fallout.Models.Shelter", b =>
                {
                    b.Property<int>("ShelterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("ShelterId");

                    b.ToTable("Shelters");
                });

            modelBuilder.Entity("Fallout.Models.ShelterSurvivor", b =>
                {
                    b.Property<int>("ShelterSurvivorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ShelterId")
                        .HasColumnType("int");

                    b.Property<int>("SurvivorId")
                        .HasColumnType("int");

                    b.HasKey("ShelterSurvivorId");

                    b.HasIndex("ShelterId");

                    b.HasIndex("SurvivorId");

                    b.ToTable("ShelterSurvivor");
                });

            modelBuilder.Entity("Fallout.Models.Survivor", b =>
                {
                    b.Property<int>("SurvivorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Arrived")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Completed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("SurvivorId");

                    b.ToTable("Survivors");
                });

            modelBuilder.Entity("Fallout.Models.ShelterSurvivor", b =>
                {
                    b.HasOne("Fallout.Models.Shelter", "Shelter")
                        .WithMany("JoinEntities")
                        .HasForeignKey("ShelterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fallout.Models.Survivor", "Survivor")
                        .WithMany("JoinEntities")
                        .HasForeignKey("SurvivorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Shelter");

                    b.Navigation("Survivor");
                });

            modelBuilder.Entity("Fallout.Models.Shelter", b =>
                {
                    b.Navigation("JoinEntities");
                });

            modelBuilder.Entity("Fallout.Models.Survivor", b =>
                {
                    b.Navigation("JoinEntities");
                });
#pragma warning restore 612, 618
        }
    }
}
